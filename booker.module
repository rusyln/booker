<?php
use Drupal\Core\Form\FormStateInterface;

use Drupal\node\Entity\Node;
/**
 * Implements hook_form_alter().
 */
function booker_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    if ($form_id == 'node_booking_form') {
      // Add the custom validation handler.
      $form['#validate'][] = 'booker_form_validate';
    }
  }

  
/**
 * Custom validation handler for the booking form.
 */
function booker_form_validate(&$form, FormStateInterface $form_state) {
    // Get the value of the date time and room fields.
    $dateTimeValue = $form_state->getValue('field_field_start_datetime');
    $roomValue = $form_state->getValue('field_rooms');

    // Check if the date time field is an array and has a 'value' key.
    if (is_array($dateTimeValue) && isset($dateTimeValue['value'])) {
        // Extract the date part of the date time field.
        $dateValue = substr($dateTimeValue['value'], 0, 10);

        // Query the database for existing bookings that match the selected date and room.
        $query = \Drupal::entityQuery('node')
            ->condition('type', 'booking')
            ->condition('field_field_start_datetime.value', $dateValue . '%', 'LIKE')
            ->condition('field_rooms', $roomValue)
            ->accessCheck(FALSE);

         // Dump the query.
        dpm( $query);

        $nids = $query->execute();

        // If a matching booking is found, set an error on the form.
        if (!empty($nids)) {
            $form_state->setErrorByName('field_field_start_datetime', t('This date and room are already booked.'));
        }
    }
}